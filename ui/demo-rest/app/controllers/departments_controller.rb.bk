class DepartmentsController < ApplicationController
  before_action :set_department, only: [:show, :edit, :update, :destroy]
  skip_before_filter :verify_authenticity_token  
  API_SERVER="http://localhost:8080"

  # GET /departments
  # GET /departments.json
  def index
    #request = RestClient.get "http://localhost:4567/department/list"
    request = RestClient.get File.join(API_SERVER,"rest-api/departments")
    department = Struct.new(:id, :name, :description)
    @departments = JSON.parse(request).map { |hash| department.new(*hash.values) }

  end

  # GET /departments/1
  # GET /departments/1.json
  def show
    #request = RestClient.get "http://localhost:4567/department/"+params['id']
    #department = Struct.new(:name, :id, :description)
    #@department = JSON.parse(request).map { |hash| department.new(*hash.values) }
  end

  # GET /departments/new
  def new
    @department = Department.new
  end

  # GET /departments/1/edit
  def edit
  end

  # POST /departments
  # POST /departments.json
  def create
    #request = RestClient.post "http://localhost:4567/department/create", { 
	  #   'name' => params['department']['name'], 
	  #   'description' => params['department']['description'] }.to_json, :content_type => :json, :accept => :json


    request = RestClient.post File.join(API_SERVER,"rest-api/departments"), { 
            'name' => params['department']['name'], 
            'description' => params['department']['description'] }.to_json, :content_type => :json, :accept => :json

    #department = Struct.new(:id, :name, :description)
    #@department = JSON.parse(request).map { |hash| department.new(*hash.values) }
  
    redirect_to :action => :index
  end

  # PATCH/PUT /departments/1
  # PATCH/PUT /departments/1.json
  def update
     #RestClient.put "http://localhost:4567/department/update", { 
	   #  'id' =>  params['id'], 
	   #  'name' =>  params['department']['name'], 
	   #  'description' =>  params['department']['description'] }.to_json, :content_type => :json, :accept => :json
    
    request = RestClient.put File.join(API_SERVER,"rest-api/departments",params['id']), { 
       'id' =>  params['id'], 
       'name' =>  params['department']['name'], 
       'description' =>  params['department']['description'] }.to_json, :content_type => :json, :accept => :json
    
    request = RestClient.get File.join(API_SERVER,"rest-api/departments")

    redirect_to :action => :index
  end

  def delete
    #request = RestClient.delete "http://localhost:4567/department/"+params['id']
    request = RestClient.delete File.join(API_SERVER,"rest-api/departments",params['id'])
    redirect_to :action => :index	
  end

  # DELETE /departments/1
  # DELETE /departments/1.json
  def destroy
    #request = RestClient.delete "http://localhost:4567/department/"+params['id']
    request = RestClient.delete File.join(API_SERVER,"rest-api/departments",params['id'])
    redirect_to :action => :index	
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_department
      #@department = Department.find(params[:id])
      #request = RestClient.get "http://localhost:4567/department/"+params[:id]
      request = RestClient.get File.join(API_SERVER,"rest-api/departments",params['id'])
      department = Struct.new(:id, :name, :description)
      @department = JSON.parse(request).map { |hash| department.new(*hash.values) }
      #@department = JSON.parse(request).map { |hash| department.new(*hash.values) }.first
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def department_params
      params.require(:department).permit(:id, :name, :description)
    end
end
